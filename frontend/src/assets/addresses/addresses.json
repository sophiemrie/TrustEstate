{
  "DIDRegistry": {
    "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "abi": [
      "event CredentialAdded(string did, string credentialType, string vcHash)",
      "event DIDRegistered(string did, address owner)",
      "event DIDUpdated(string did, string newDocument)",
      "function addVerifiableCredential(string did, string credentialType, string vcHash)",
      "function dids(string did) view returns (address owner, string didDocument, bool isValid)",
      "function getCredential(string did, string credentialType) view returns (string)",
      "function isOwner(string did, address owner) view returns (bool)",
      "function register(string did, string didDocument)",
      "function updateDocument(string did, string newDocument)",
      "function verify(string did) view returns (bool)"
    ]
  },
  "TrustEstate": {
    "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "abi": [
      "constructor(string name_, string symbol_, address madatoryPartitcipant, address didRegistryAddress)",
      "event ProposalApproved(uint256 plotId, uint256 proposalId, address approver)",
      "event ProposalCreated(uint256 plotId, uint256 proposalId)",
      "event ProposalExecuted(uint256 plotId, uint256 proposalId)",
      "event Transfer(uint256 plotId, (address owner, uint256 share)[] from, (address owner, uint256 share)[] to)",
      "function _getOwners(uint256 tokenId) view returns (address[])",
      "function _hasToApprove(uint256 proposalId, address account) view returns (bool)",
      "function _isOwner(uint256 tokenId, address account) view returns (bool)",
      "function _isOwnerInArray(address account, (address owner, uint256 share)[] owners) pure returns (bool)",
      "function approveProposal(uint256 proposalId)",
      "function createMergeProposal(uint256 plotId1, uint256 plotId2, (string ipfsHash, bool allowIndividualTransfer) merge, (address owner, uint256 share)[] owners)",
      "function createSplitProposal(uint256 plotId, (string ipfsHash, bool allowIndividualTransfer) split1, (string ipfsHash, bool allowIndividualTransfer) split2, (address owner, uint256 share)[] owners1, (address owner, uint256 share)[] owners2)",
      "function createTransferProposal(uint256 plotId, (address owner, uint256 share)[] owners)",
      "function didRegistry() view returns (address)",
      "function dids(address owner) view returns (string did)",
      "function executeProposal(uint256 proposalId)",
      "function getPlot(uint256 id) view returns ((uint256 id, string ipfsHash, bool allowIndividualTransfer))",
      "function getPlotCount() view returns (uint256)",
      "function mintPlot((address owner, uint256 share)[] owners, string ipfsHash, bool allowIndividualTransfer)",
      "function proposals(uint256 proposalId) view returns (uint256 plotId, uint8 proposalType, bool executed, bytes proposalData)",
      "function register(string did)",
      "function transferOwnershipShare(address from, address to, uint256 plotId, uint256 amount)"
    ]
  }
}